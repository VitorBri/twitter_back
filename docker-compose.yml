services:
  db:
    image: postgres:13.0-alpine
    ports:
      - 5433:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=twitter_dev
      - POSTGRES_PASSWORD=twitter_dev
      - POSTGRES_DB=twitter_db
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U twitter_dev -d twitter_dev_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  web:
    build: .
    command: >
      sh -c "sleep 5 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - app_data:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./env.dev
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  app_data: